{"version":3,"sources":["hooks/useApi.js","components/Quote.js","App.js","index.js"],"names":["useApi","useState","data","setData","useEffect","fetchData","a","fetch","process","json","result","console","log","Quote","quote","author","App","prevIndex","setPrevIndex","currentIndex","setCurrentIndex","length","Math","floor","random","onClick","randomIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAqBeA,MAnBf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,+EAEcC,MAAMC,yIAFpB,8BAEoDC,OAFpD,OAERC,EAFQ,OAGdP,EAAQO,GAHM,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDASfP,MACC,IAEI,CAACH,I,OCTKW,MATf,YAA6C,IAAD,IAA3BX,KAAQY,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAC9B,OACE,gCACE,6BAAKD,IACL,4BAAIC,QCiCKC,MAjCf,WACE,MAAehB,IAARE,EAAP,oBACA,EAAkCD,qBAAlC,mBAAOgB,EAAP,KAAkBC,EAAlB,KACA,EAAwCjB,qBAAxC,mBAAOkB,EAAP,KAAqBC,EAArB,KAqBA,OANAhB,qBAAU,WACJF,EAAKmB,QACPD,GAAgB,kBAAME,KAAKC,MAAOD,KAAKE,SAAWtB,EAAKmB,OAAU,QAElE,CAACnB,IAGF,gCACGiB,EAAe,cAAC,EAAD,CAAOjB,KAAMA,EAAKiB,KAAoB,oBACrDF,GAAa,wBAAQQ,QAhBL,WACfR,IACFG,EAAgBH,GAChBC,EAAaC,KAaC,uBACd,wBAAQM,QAvBW,WACrB,IAAMC,EAAcJ,KAAKC,MAAOD,KAAKE,SAAWtB,EAAKmB,OAAU,GAC/DD,EAAgBM,GAChBR,EAAaC,IAoBX,uBC3BNQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.31bc0b84.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction useApi() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await (await fetch(process.env.REACT_APP_API_URL)).json();\n        setData(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return [data];\n}\n\nexport default useApi;","function Quote({ data: { quote, author } }) {\n  return (\n    <div>\n      <h2>{quote}</h2>\n      <p>{author}</p>\n    </div>\n  );\n}\n\nexport default Quote;","import { useEffect, useState } from 'react';\nimport useApi from './hooks/useApi';\nimport Quote from './components/Quote';\n\nfunction App() {\n  const [data] = useApi();\n  const [prevIndex, setPrevIndex] = useState();\n  const [currentIndex, setCurrentIndex] = useState();\n\n  const getRandomQuote = () => {\n    const randomIndex = Math.floor((Math.random() * data.length) + 1);\n    setCurrentIndex(randomIndex);\n    setPrevIndex(currentIndex);\n  };\n\n  const getPrevQuote = () => {\n    if (prevIndex) {\n      setCurrentIndex(prevIndex);\n      setPrevIndex(currentIndex);\n    }\n  };\n\n  useEffect(() => {\n    if (data.length) {\n      setCurrentIndex(() => Math.floor((Math.random() * data.length) + 1));\n    }\n  }, [data]);\n\n  return (\n    <div>\n      {currentIndex ? <Quote data={data[currentIndex]} /> : '≈Åadowanie...'}\n      {prevIndex && <button onClick={getPrevQuote}>Poprzedni</button>}\n      <button onClick={getRandomQuote}>Losuj</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}