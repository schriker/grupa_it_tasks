{"version":3,"sources":["hooks/useApi.js","App.js","reportWebVitals.js","index.js"],"names":["useApi","useState","data","setData","useEffect","fetchData","a","fetch","process","json","result","console","log","App","prevIndex","setPrevIndex","currentIndex","setCurrentIndex","length","Math","floor","random","quote","onClick","randomIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAwBeA,MAtBf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,+EAGcC,MAAMC,yIAHpB,8BAGoDC,OAHpD,OAGRC,EAHQ,OAKdP,EAAQO,GALM,gDAOdC,QAAQC,IAAR,MAPc,yDAAH,qDAYfP,MACC,IAEI,CAACH,I,OCgBKW,MAlCf,WACE,MAAeb,IAARE,EAAP,oBACA,EAAkCD,qBAAlC,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAwCd,qBAAxC,mBAAOe,EAAP,KAAqBC,EAArB,KAsBA,OAPAb,qBAAU,WACJF,EAAKgB,QACPD,GAAgB,kBAAME,KAAKC,MAAOD,KAAKE,SAAWnB,EAAKgB,OAAU,QAElE,CAAChB,IAIF,gCACGc,EAAed,EAAKc,GAAcM,MAAQ,oBAC3C,wBAAQC,QAvBW,WACrB,IAAMC,EAAcL,KAAKC,MAAOD,KAAKE,SAAWnB,EAAKgB,OAAU,GAC/DD,EAAgBO,GAChBT,EAAaC,IAoBX,mBACA,wBAAQO,QAlBS,WACfT,IACFG,EAAgBH,GAChBC,EAAaC,KAeb,2BCpBSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.69cadcf0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction useApi() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n\n      try {\n        const result = await (await fetch(process.env.REACT_APP_API_URL)).json();\n\n        setData(result);\n      } catch (error) {\n        console.log(error);\n      }\n\n    };\n\n    fetchData();\n  }, []);\n\n  return [data];\n}\n\nexport default useApi;","import { useEffect, useState } from 'react';\nimport useApi from './hooks/useApi';\n\nfunction App() {\n  const [data] = useApi();\n  const [prevIndex, setPrevIndex] = useState();\n  const [currentIndex, setCurrentIndex] = useState();\n\n  const getRandomQuote = () => {\n    const randomIndex = Math.floor((Math.random() * data.length) + 1);\n    setCurrentIndex(randomIndex);\n    setPrevIndex(currentIndex);\n  };\n\n  const getPrevQuote = () => {\n    if (prevIndex) {\n      setCurrentIndex(prevIndex);\n      setPrevIndex(currentIndex);\n    }\n  };\n\n  useEffect(() => {\n    if (data.length) {\n      setCurrentIndex(() => Math.floor((Math.random() * data.length) + 1));\n    }\n  }, [data]);\n\n\n  return (\n    <div>\n      {currentIndex ? data[currentIndex].quote : '≈Åadowanie...'}\n      <button onClick={getRandomQuote}>Losuj</button>\n      <button onClick={getPrevQuote}>Poprzedni</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}